Перем ВыбраннаяПрограммаИспытаний;

&НаКлиенте
Процедура УстановитьДоступность()
	
	Элементы.РезультатыИспытаний.ТолькоПросмотр = Объект.ИспытанияЗавершены;
	Элементы.ПоПрограммеИспытаний.Доступность = НЕ Объект.ИспытанияЗавершены;

КонецПроцедуры

&НаКлиенте
Процедура ИспытанияЗавершеныПриИзменении(Элемент)

	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПриОткрытииНаСервере(Отказ);
	
	УстановитьДоступность();
	
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Сотрудники.ТабельныйНомер,
	|	Сотрудники.Ссылка,
	|	Сотрудники.Фамилия,
	|	Сотрудники.Имя,
	|	Сотрудники.Отчество
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ФИО = Выборка.Фамилия + " " + Лев(Выборка.Имя,1) + "." + ?(СтрДлина(Выборка.Отчество)>0, " " + Лев(Выборка.Отчество, 1) + ".", "");
		Элементы.РезультатыИспытанийСотрудник.СписокВыбора.Добавить(Выборка.Ссылка, ФИО + ", " + Выборка.ТабельныйНомер);			
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Оборудование.Ссылка,
	|	Оборудование.Наименование,
	|	Оборудование.ЗаводскойНомер
	|ИЗ
	|	Справочник.Оборудование КАК Оборудование";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Элементы.РезультатыИспытанийОборудование.СписокВыбора.Добавить(Выборка.Ссылка, Выборка.Наименование + ", " + Выборка.ЗаводскойНомер);			
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура АктОтбораПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.АктОтбора) Тогда
		ДатаОтбора = ОбщегоНазначенияСервер.ПолучитьРеквизитОбъекта(Объект.АктОтбора, "ДатаОтбора");
		ВремяОтбора = ОбщегоНазначенияСервер.ПолучитьРеквизитОбъекта(Объект.АктОтбора, "ВремяОтбора");
		Объект.ДатаВремяОтбора = ДатаОтбора + Час(ВремяОтбора)*3600 + Минута(ВремяОтбора)*60 + Секунда(ВремяОтбора);
	Иначе
		Объект.ДатаВремяОтбора = Дата(1,1,1);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатыИспытанийПоказательКачестваПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.РезультатыИспытаний.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.ПоказательКачества) Тогда
		ТекущиеДанные.Норма = ОбщегоНазначенияСервер.ПолучитьРеквизитОбъекта(ТекущиеДанные.ПоказательКачества, "НормированноеЗначение");	
		ТекущиеДанные.ЕдиницаИзмерения = ОбщегоНазначенияСервер.ПолучитьРеквизитОбъекта(ТекущиеДанные.ПоказательКачества, "ЕдиницаИзмерения");	
		ТекущиеДанные.МетодИспытаний = ОбщегоНазначенияСервер.ПолучитьРеквизитОбъекта(ТекущиеДанные.ПоказательКачества, "МетодИспытаний");	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатыИспытанийПриАктивизацииСтроки(Элемент)
	
	Если Объект.РезультатыИспытаний.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	ТекущиеДанные = Элементы.РезультатыИспытаний.ТекущиеДанные;
	Элементы.РезультатыИспытанийРезультатПоИспытанию.Доступность = (ТекущиеДанные.РезультатПоПаспорту = 0);
	Элементы.РезультатыИспытанийРезультатПоПаспорту.Доступность = (ТекущиеДанные.РезультатПоИспытанию = 0);
	
КонецПроцедуры


&НаКлиенте
Процедура РезультатыИспытанийРезультатПоПаспортуПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.РезультатыИспытаний.ТекущиеДанные;
	Элементы.РезультатыИспытанийРезультатПоИспытанию.Доступность = (ТекущиеДанные.РезультатПоПаспорту = 0);
	
КонецПроцедуры


&НаКлиенте
Процедура РезультатыИспытанийРезультатПоИспытаниюПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.РезультатыИспытаний.ТекущиеДанные;
	Элементы.РезультатыИспытанийРезультатПоПаспорту.Доступность = (ТекущиеДанные.РезультатПоИспытанию = 0);
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьПоПрограммеИспытаний(Команда)

	Если Объект.РезультатыИспытаний.Количество() > 0 Тогда
	    ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьПоПрограммеИспытанийПродолжение", ЭтотОбъект),
	                        "Табличная часть ""Результаты испытаний"" будет очищена!!!
	                        |Продолжить?", РежимДиалогаВопрос.ДаНет, 30, КодВозвратаДиалога.Да,, КодВозвратаДиалога.Нет);
	Иначе
		ЗаполнитьПоПрограммеИспытанийПродолжение(КодВозвратаДиалога.Да, Неопределено);						
	КонецЕсли;						

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоПрограммеИспытанийПродолжение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если НЕ РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ВыбраннаяПрограммаИспытаний = Неопределено;
	ПоказатьВводЗначения(Новый ОписаниеОповещения("ЗаполнитьПоПрограммеИспытанийЗавершение", ЭтотОбъект),
								ВыбраннаяПрограммаИспытаний, "Выберите программу испытаний", 
								Новый ОписаниеТипов("СправочникСсылка.ПрограммыИспытаний"));

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоПрограммеИспытанийЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	Если Значение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеФормы = Объект;
	ЗаполнитьРезультатыИспытанийНаСервере(ДанныеФормы, Значение);
	КопироватьДанныеФормы(ДанныеФормы, Объект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРезультатыИспытанийНаСервере(ДанныеФормы, Программа)
	
	ДанныеФормы.РезультатыИспытаний.Очистить();
	Для каждого Строка Из Программа.ПереченьИспытаний Цикл
		
		НоваяСтрока = ДанныеФормы.РезультатыИспытаний.Добавить();
		НоваяСтрока.ПоказательКачества = Строка.Показатель;
		НоваяСтрока.МетодИспытаний = Строка.Показатель.МетодИспытаний;
		НоваяСтрока.ЕдиницаИзмерения = Строка.Показатель.ЕдиницаИзмерения;
		НоваяСтрока.Норма = Строка.Показатель.НормированноеЗначение;
		
	КонецЦикла;	
КонецПроцедуры
